#!/bin/bash
        progress-bar() {
            local duration=${1}

            already_done() { for ((done=0; done<$elapsed; done++)); do printf "â–‡"; done }
            remaining() { for ((remain=$elapsed; remain<$duration; remain++)); do printf " "; done }
            percentage() { printf "| %s%%" $(( (($elapsed)*100)/($duration)*100/100 )); }
            clean_line() { printf "\r"; }

            for (( elapsed=1; elapsed<=$duration; elapsed++ )); do
            already_done; remaining; percentage
            sleep 1
            clean_line
            done
            clean_line
        }


        kubermachines() {
           
            if [[ $1 == "configure" ]]; then 
        
                 if [[ $2 == "-f" ]]; then
               
                     if [[ -n $3 ]]; then 
                        export CONTEXT_FILE=$3
                        curl -fsSL https://raw.githubusercontent.com/Kubermachines2020/Spaces/main/configure.sh  | bash
        
                     elif [[ -z $3 ]]; then
                        echo -e "Context file path is missing."		
                 fi
        
                 elif [[ -z $2 ]]; then
                     export CONTEXT_FILE="contextfile.yaml"
                     curl -fsSL https://raw.githubusercontent.com/Kubermachines2020/Spaces/main/configure.sh  | bash
        
                 elif [[ -n $2 ]]; then
                     echo -e "'$2' is not a kubermachines $1 option. See 'kubermachines help' for usage."
                 fi
        
            elif [[ $@ == "up" ]]; then
                cat /dev/null > kubermachines.log
                { tilt up >> kubermachines.log & } 2>/dev/null; sleep .1;
                echo -e "Open http://localhost:10350 in browser"
                #tail -f kubermachines.log
                
                webhook=0
                while [ $webhook -eq 0 ]; do
                      count=$(grep -o "STEP 3/3" kubermachines.log | wc -l)
                      if [[ $count != 0 ]];then
                              echo -e "\nPublishing .."
                              webhook=1
                      else 
                          progress-bar 100
                       fi

                done
                
               sleep 5
               curl -sS -X POST -H 'Content-Type: application/json' -H 'cloud-uuid: ce6fbd10-6240-11eb-847f-8e84d23e2c1a' https://console.kubermachines.com:8888/kubernetes/space_definition/7bef6c34-8bda-11eb-963d-3e98a8680f60/space_publish_webhook
                echo -e "\nYour application has been published successfully !" 
                      
                
            
            elif [[ $@ == "down" ]]; then
                tilt down
                pkill tilt 
                curl -X POST -H 'Content-Type: application/json' -H 'cloud-uuid: ce6fbd10-6240-11eb-847f-8e84d23e2c1a' https://console.kubermachines.com:8888/kubernetes/space_definition/7bef6c34-8bda-11eb-963d-3e98a8680f60/space_unpublish_webhook
             
            elif [[ $@ == "help" ]]; then
                echo -e "Run 'kubermachines up' to deploy your services in a development space configured for your team.
Usage: kubermachines COMMAND

Available commands:
install     Install dependencies
configure   Set your services configurations
up          Start Kubermachines with the given Tiltfile args
down        Delete resources created by 'kubermachines up'
"
        
            else 
              echo -e "kubermachines: '$@' is not a kubermachines command.
See 'kubermachines help' for usage."
            fi
        }
